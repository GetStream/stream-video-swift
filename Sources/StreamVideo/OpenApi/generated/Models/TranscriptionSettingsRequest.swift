//
// TranscriptionSettingsRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


public struct TranscriptionSettingsRequest: Codable, JSONEncodable, Hashable {
    public enum Mode: String, Codable, CaseIterable {
        case available = "available"
        case disabled = "disabled"
        case autoOn = "auto-on"
        case unknown = "_unknown"

        public init(from decoder: Decoder) throws {
            let container = try decoder.singleValueContainer()
            if let decodedValue = try? container.decode(String.self),
                let value = Self(rawValue: decodedValue) {
                self = value
            } else {
                self = .unknown
            }
        }
    }
    public var closedCaptionMode: String?
    public var languages: [String]?
    public var mode: Mode

    public init(closedCaptionMode: String? = nil, languages: [String]? = nil, mode: Mode) {
        self.closedCaptionMode = closedCaptionMode
        self.languages = languages
        self.mode = mode
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case closedCaptionMode = "closed_caption_mode"
        case languages
        case mode
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(closedCaptionMode, forKey: .closedCaptionMode)
        try container.encodeIfPresent(languages, forKey: .languages)
        try container.encode(mode, forKey: .mode)
    }
}

