//
// UserUpdatedEvent.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


public struct UserUpdatedEvent: Codable, JSONEncodable, Hashable {
    public var createdAt: Date
    public var receivedAt: Date?
    public var type: String = "user.updated"
    public var user: UserEventPayload

    public init(createdAt: Date, receivedAt: Date? = nil, type: String = "user.updated", user: UserEventPayload) {
        self.createdAt = createdAt
        self.receivedAt = receivedAt
        self.type = type
        self.user = user
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case createdAt = "created_at"
        case receivedAt = "received_at"
        case type
        case user
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encodeIfPresent(receivedAt, forKey: .receivedAt)
        try container.encode(type, forKey: .type)
        try container.encode(user, forKey: .user)
    }
}

