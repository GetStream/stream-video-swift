//
// CreateDeviceRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


public struct CreateDeviceRequest: Codable, JSONEncodable, Hashable {
    public enum PushProvider: String, Codable, CaseIterable {
        case firebase = "firebase"
        case apn = "apn"
        case huawei = "huawei"
        case xiaomi = "xiaomi"
    }
    /** Device ID */
    public var id: String
    /** Push provider */
    public var pushProvider: PushProvider
    /** Push provider name */
    public var pushProviderName: String?
    /** When true the token is for Apple VoIP push notifications */
    public var voipToken: Bool?

    public init(id: String, pushProvider: PushProvider, pushProviderName: String? = nil, voipToken: Bool? = nil) {
        self.id = id
        self.pushProvider = pushProvider
        self.pushProviderName = pushProviderName
        self.voipToken = voipToken
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case pushProvider = "push_provider"
        case pushProviderName = "push_provider_name"
        case voipToken = "voip_token"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(pushProvider, forKey: .pushProvider)
        try container.encodeIfPresent(pushProviderName, forKey: .pushProviderName)
        try container.encodeIfPresent(voipToken, forKey: .voipToken)
    }
}

