//
// ReactionGroupResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


public struct ReactionGroupResponse: Codable, JSONEncodable, Hashable {
    public var count: Int
    public var firstReactionAt: Date
    public var lastReactionAt: Date
    public var sumScores: Int

    public init(count: Int, firstReactionAt: Date, lastReactionAt: Date, sumScores: Int) {
        self.count = count
        self.firstReactionAt = firstReactionAt
        self.lastReactionAt = lastReactionAt
        self.sumScores = sumScores
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case count
        case firstReactionAt = "first_reaction_at"
        case lastReactionAt = "last_reaction_at"
        case sumScores = "sum_scores"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(count, forKey: .count)
        try container.encode(firstReactionAt, forKey: .firstReactionAt)
        try container.encode(lastReactionAt, forKey: .lastReactionAt)
        try container.encode(sumScores, forKey: .sumScores)
    }
}

