//
// WSClientEvent.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
/** The discriminator object for all websocket client events, it maps events&#39; payload to the final type */

internal class WSClientEventMapping: Decodable {
    let type: String
}

public enum WSClientEvent: Codable, JSONEncodable, Hashable {
    case typeUserUpdatedEvent(UserUpdatedEvent)
    public var type: String {
        switch self {
        case .typeUserUpdatedEvent(let value):
            return value.type
        }
    }
    public var rawValue: Event {
        switch self {
        case .typeUserUpdatedEvent(let value):
            return value
        }
    }
    public func encode(to encoder: Encoder) throws {
        var container = encoder.singleValueContainer()
        switch self {
        case .typeUserUpdatedEvent(let value):
            try container.encode(value)
        }
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let dto = try container.decode(WSClientEventMapping.self)
        if dto.type == "user.updated" {
            let value = try container.decode(UserUpdatedEvent.self)
            self = .typeUserUpdatedEvent(value)
        } else {
            throw DecodingError.typeMismatch(Self.Type.self, .init(codingPath: decoder.codingPath, debugDescription: "Unable to decode instance of WSClientEvent"))
        }
    }

}

